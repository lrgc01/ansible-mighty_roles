---
- name: Ensure aws config dir -------------
  file:
    path: "{{ awsHomeDir }}"
    state: "directory"
    mode: "0755"
  register: aws_dir_created
  tags: base_config

- name: Set AWS config ini style file -----
  ini_file:
    path: "{{ item.file }}"
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  loop: "{{ awsIniPairs }}"
  register: aws_ini_updated
  tags: base_config

- name: Gather default VPC facts ----------
  ec2_vpc_net_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    filters:
      isDefault: "true"
  register: vpc_facts
  tags: gather_default_vpc, create_security_groups, create_ec2_instances, create_aws_instances

- name: Ensure base output dir ------------
  file: 
    path: "{{ facts_out_dir }}" 
    state: "directory"
  when: facts_out_dir is defined
  register: output_dir_ready
  tags: gather_default_vpc, create_security_groups, create_ec2_instances, create_aws_instances

- name: Copy default VPC facts ------------
  copy:
    content: "{{ item | to_nice_json }}"
    dest: "{{ facts_out_dir }}/{{ item.vpc_id }}.json"
  loop: "{{ vpc_facts.vpcs }}"
  when: vpc_facts is success
  tags: gather_default_vpc

- name: Gather default subnets ------------
  ec2_vpc_subnet_facts:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    filters:
      vpc-id: "{{ vpc_facts.vpcs[0].vpc_id }}"
  when: vpc_facts is success
  register: default_subnets
  tags: gather_default_vpc, create_security_groups, create_ec2_instances, create_aws_instances

- name: Copy default subnets facts --------
  copy:
    content: "{{ item | to_nice_json }}"
    dest: "{{ facts_out_dir }}/{{ item.subnet_id }}.json"
  loop: "{{ default_subnets.subnets }}"
  when: default_subnets is success
  tags: gather_default_vpc

#- name: Show test
#  debug:
#    var:  my_string 
#    #var: item.instance_id + " " + item.vpc_id
#    #var: item.instances
#    #var: ( item.vpcs | default(item.instances) )
#    #var: item[0].vpc_id + " " + ( item[0].public_dns_name | default(omit) ) 
#  #loop: "{{ ec2_facts.results }} + [ {{ vpc_facts }} ]"
#  #loop: "{{ ec2_facts | json_query('results[*].instances') }} + [ {{ vpc_facts.vpcs }} ]"
#  loop: "{{ ec2Instances }}"
#  vars:
#    my_string: "{{ item.tags.Name + '_' + item.type + '_' + item.image }}"
#  tags: show_test

