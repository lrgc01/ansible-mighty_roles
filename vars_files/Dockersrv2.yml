---
###########################################
# 
# Common role block
#
# Preliminary common configs
#
my_os : { Ubuntu : "ubuntu" , Debian : "debian" }
listAptRepos : # see inside roles/Docker/defaults/main.yml 
  - {
       state   : "present" ,
       keyUrl  : "https://download.docker.com/linux/{{ my_os[ansible_facts['distribution']] }}/gpg" ,
       repoStr : "deb [arch=amd64] https://download.docker.com/linux/{{ my_os[ansible_facts['distribution']] }} {{ ansible_facts['distribution_release'] }} stable" ,
       keyId   : "0EBFCD88" ,
    }

# Packages to install apt keys later
apt_key_req_packs : [ 'apt-transport-https', 'ca-certificates', 'curl', 'gnupg2', 'software-properties-common' ]

# Some very early pip python packs (It's inside roles/Docker/defaults/main.yml)
pip_install_list        : [ "docker" ]

#--- End of common role block

###########################################
#
# Base role block variable definition
#
# General package and service hash list
#
# If a packet has a service associate it should be listed with srv, state and enabled.
# enabled and state defaults to true and started respectively.
dep_pkg_list :
   - { pkg : "containerd.io"   }
   - { pkg : "docker-ce-cli"   }
   - { pkg : "docker-ce" ,  srv : "docker" , state : "started" , enabled : true }


#--- End of base role block


###########################################
#
# Docker role block
#
#
# General
#
# Root (base) directories for each volume in nginx
nginx_cfg_volname: "nginxcfg"
nginx_log_volname: "nginxlogs"
nginx_web_volname: "nginxhtml"
nginx_cfg : "/var/lib/docker/volumes/{{ nginx_cfg_volname }}/_data"
nginx_log : "/var/lib/docker/volumes/{{ nginx_log_volname }}/_data"
nginx_web : "/var/lib/docker/volumes/{{ nginx_web_volname }}/_data"

apache2_cfg_volname: "apache2cfg"
apache2_log_volname: "apache2logs"
apache2_web_volname: "apache2html"
apache2_cfg : "/var/lib/docker/volumes/{{ apache2_cfg_volname }}/_data"
apache2_log : "/var/lib/docker/volumes/{{ apache2_log_volname }}/_data"
apache2_web : "/var/lib/docker/volumes/{{ apache2_web_volname }}/_data"

dockername_nginx : "nginx"
dockername_apache2 : "apache2"

FQDN_domain1   : "lrc-tic-01.brazilsouth.cloudapp.azure.com"
domain1   : "lrc-tic-01"

#
# List of containers to be created.
# Except for 'name' and 'networks', all others may be omitted:
#    networks (for now networks must be defined - or use 'bridge')
#    links
#    volumes
#    volumes_from
#    working_dir
#    user
#    published_ports
#    state
#    purge_networks (must use name=bridge when removing others)
#    pull = check image to pull always the newer
#
# All plural variable names are LISTs, but 'networks'
# must be a list of dict.
# If omitted, 'image' will default to container's name.
#
dockerContainerList :
  - {
        enabled         : false ,
        name            : "php" ,
        image           : "lrgc01/php-stretch_slim" ,
        pull            : true ,
        networks        : [ { name : "bridge" } ] ,
        volumes         : [ "php_etc:/etc/php", "php_run:/run/php", "/var/www/html:/var/www/html" , ] ,
        published_ports : [ "0.0.0.0:9900:9000", ] , 
        state           : "started" ,
    }
  - {
        enabled         : true ,
        name            : "uwsgi" ,
        image           : "lrgc01/uwsgi-stretch_slim" ,
        pull            : true ,
        networks        : [ { name : "bridge" } ] ,
        volumes         : [ "uwsgicfg:/uwsgi.d", ] ,
        published_ports : [ "0.0.0.0:9090:9090", "0.0.0.0:9191:9191", "0.0.0.0:3131:3131", ] , 
        state           : "started" ,
    }
  - {
        enabled         : true ,
        name            : "{{ dockername_nginx }}" ,
        image           : "lrgc01/nginx-stretch_slim" ,
        pull            : true ,
        networks        : [ { name : "bridge" } ] ,
        volumes         : [ "{{ nginx_cfg_volname }}:/etc/nginx", "{{ nginx_web_volname }}:/var/www/html", "{{ nginx_log_volname }}:/var/log/nginx", ] ,
        volumes_from    : [ "uwsgi" ] ,
        published_ports : [ "0.0.0.0:8080:80", "0.0.0.0:4443:443", ] , 
        state           : "started" ,
    }
  - {
        enabled         : true ,
        name            : "{{ dockername_apache2 }}" ,
        image           : "lrgc01/apache2-stretch_slim" ,
        pull            : true ,
        networks        : [ { name : "bridge" } ] ,
        volumes         : [ "{{ apache2_cfg_volname }}:/etc/apache2", "{{ apache2_web_volname }}:/var/www/html", "{{ apache2_log_volname }}:/var/log/apache2", ] ,
        volumes_from    : [ "uwsgi" ] ,
        published_ports : [ "0.0.0.0:8880:80", "0.0.0.0:4433:443", ] , 
        state           : "started" ,
        env             : { APACHE2_MOD_LIST : "proxy proxy_uwsgi" , } ,
    }


# After container creation:
#
# dir, file, template or link, depending on key values
#
# Will be used in template and file modules to create, delete and link.
#
# This docker_dir_file_tmpl_list dict var will be used in 4 different tasks, one of 
# each type: tmpl, dir, link and file.
#
# If mode not present, it will default to 0644 for files and 0755 for directories
# Note that one line may be used to multiple goals as defined in types.
# "dir" uses dest only
# "link" uses src and dest: ln -s src dest 
#    (force=yes => ln -s -f)
# "tmpl" uses name and dest: name.j2 -> dest/name
# "absent" uses dest to remove files
# srv is used to restart the service, if applicable, after a template is changed.
# docker_container is the container name to restart in case of file modification
docker_dir_file_tmpl_list  :
   - { types : [ "dir" ] , dest : "{{ nginx_cfg }}/ssl" , }
   - { 
        types      : [ "tmpl" , "link" ,] , 
        dest       : "{{ apache2_cfg }}/sites-available" , 
        tmpl       : "apache2-uwsgi.conf.j2" , 
        name       : "{{ domain1 }}.conf" , 
        src        : "../sites-available/{{ domain1 }}.conf" , 
        force      : true , 
        servername : "{{ FQDN_domain1 }}" , 
        socketname : "unix:/uwsgi.d/uwsgi.sock" , 
        socketsrv  : "uwsgi://uwsgi-app1/" , 
        docker_container : "{{ dockername_apache2 }}" ,
     }
   - { 
        types      : [ "tmpl" , "link" ,] , 
        dest       : "{{ nginx_cfg }}/sites-available" , 
        tmpl       : "nginx-uwsgi.conf.j2" , 
        name       : "{{ domain1 }}.conf" , 
        src        : "../sites-available/{{ domain1 }}.conf" , 
        force      : true , 
        servername : "{{ FQDN_domain1 }}" , 
        socketname : "unix:/uwsgi.d/uwsgi.sock" , 
        docker_container : "{{ dockername_nginx }}" ,
     }

# docker_container is the container name to restart in case of file modification
#docker_up_down_files_list  :
#   - {
#           action           : "upload" ,
#           local            : "files/nginx-{{ domain1 }}.conf" ,
#           remote           : "{{ nginx_cfg}}/sites-available/{{ domain1 }}.conf" ,
#           docker_container : "{{ dockername_nginx }}" ,
#   }
#   - {
#           action           : "upload" ,
#           local            : "files/apache2-{{ domain1 }}.conf" ,
#           remote           : "{{ apache2_cfg}}/sites-available/{{ domain1 }}.conf" ,
#           docker_container : "{{ dockername_apache2 }}" ,
#   }
#
#--- End of Docker role block
