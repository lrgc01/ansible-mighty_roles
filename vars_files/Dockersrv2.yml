---
###########################################
# 
# Common role block
#
# Preliminary common configs
#
#my_os : { Ubuntu : "ubuntu" , Debian : "debian" }
#listAptRepos : # It cames inside roles/Docker/defaults/main.yml 
#  - {
#       state   : "present" ,
#       keyUrl  : "https://download.docker.com/linux/{{ my_os[ansible_facts['distribution']] }}/gpg" ,
#       repoStr : "deb [arch=amd64] https://download.docker.com/linux/{{ my_os[ansible_facts['distribution']] }} {{ ansible_facts['distribution_release'] }} stable" ,
#       keyId   : "0EBFCD88" ,
#    }

# Packages to install apt keys later
# apt_key_req_packs : [ 'apt-transport-https', 'ca-certificates', 'curl', 'gnupg2', 'software-properties-common' ]

# Some very early pip python packs (It's inside roles/Docker/defaults/main.yml)
#pip_install_list        : [ "docker" ]

#--- End of common role block

###########################################
#
# Base role block variable definition
#
# General package and service hash list
#
# If a packet has a service associate it should be listed with srv, state and enabled.
# enabled and state defaults to true and started respectively.
dep_pkg_list		:
   - { pkg : "containerd.io"   }
   - { pkg : "docker-ce-cli"   }
   - { pkg : "docker-ce" ,  srv : "docker" , state : "started" , enabled : true }


#--- End of base role block


###########################################
#
# Docker role block
#
#
# List of containers to be created.
# Except for 'name' and 'networks', all others may be omitted:
#    networks (for now networks must be defined - or use 'bridge')
#    links
#    volumes
#    volumes_from
#    working_dir
#    user
#    published_ports
#    state
#    purge_networks (must use name=bridge when removing others)
#    pull = check image to pull always the newer
#
# All plural variable names are LISTs, but 'networks'
# must be a list of dict.
# If omitted, 'image' will default to container's name.
#
dockerContainerList :
  - {
        enabled         : false ,
        name            : "maven" ,
        image           : "lrgc01/scratch_maven" ,
        networks        : [ { name : "bridge" } ] ,
        volumes         : [ "maven:/opt/maven" , ] ,
        state           : "present" ,
    }
  - {
        enabled         : false ,
        name            : "jenkins" ,
        image           : "lrgc01/jenkins" ,
        pull            : true ,
        networks        : [ { name : "jenkins_net" } ] ,
        volumes         : [ "jenkins:/var/lib/jenkins" , "/home:/home", ] ,
        volumes_from    : [ "maven" ] ,
        working_dir     : "/var/lib/jenkins" ,
        user            : "jenkins" ,
        published_ports : [ "0.0.0.0:8080:8080" ] , 
        state           : "started" ,
    }
  - {
        enabled         : false ,
        name            : "python" ,
        image           : "lrgc01/pytest_pyinstaller" ,
        pull            : true ,
        networks        : [ { name : "jenkins_net" } ] ,
        volumes         : [ "/home:/home", ] ,
        volumes_from    : [ "jenkins" ] ,
        state           : "started" ,
    }
  - {
        enabled         : false ,
        name            : "nodejs" ,
        image           : "lrgc01/nodejs" ,
        pull            : true ,
        networks        : [ { name : "jenkins_net" } ] ,
        volumes         : [ "/home:/home", ] ,
        volumes_from    : [ "jenkins" ] ,
        published_ports : [ "0.0.0.0:3030:3000" ] , 
        state           : "started" ,
    }
  - {
        enabled         : false ,
        name            : "php" ,
        image           : "lrgc01/php-stretch_slim" ,
        pull            : true ,
        networks        : [ { name : "jenkins_net" } ] ,
        volumes         : [ "php_etc:/etc/php", "php_run:/run/php", "/var/www/html:/var/www/html" , ] ,
        volumes_from    : [ "jenkins" ] ,
        published_ports : [ "0.0.0.0:9900:9000", ] , 
        state           : "started" ,
    }
  - {
        enabled         : false ,
        name            : "my_db_1" ,
        image           : "lrgc01/mariadb-stretch_slim" ,
        pull            : true ,
        networks        : [ { name : "bridge" } ] ,
        volumes         : [ "mysql_data:/var/lib/mysql", "mysql_etc:/etc/mysql", ] ,
        published_ports : [ "0.0.0.0:3306:3306", ] , 
        state           : "started" ,
    }
  - {
        enabled         : true ,
        name            : "uwsgi" ,
        image           : "lrgc01/uwsgi-stretch_slim" ,
        pull            : true ,
        networks        : [ { name : "bridge" } ] ,
        volumes         : [ "uwsgicfg:/uwsgi.d", ] ,
        published_ports : [ "0.0.0.0:9090:9090", "0.0.0.0:9191:9191", "0.0.0.0:3131:3131", ] , 
        state           : "started" ,
    }
  - {
        enabled         : true ,
        name            : "nginx" ,
        image           : "lrgc01/nginx-stretch_slim" ,
        pull            : true ,
        networks        : [ { name : "bridge" } ] ,
        volumes         : [ "nginxcfg:/etc/nginx", "nginxhtml:/var/www/html", "nginxlogs:/var/log/nginx", ] ,
        volumes_from    : [ "uwsgi" ] ,
        published_ports : [ "0.0.0.0:8080:80", "0.0.0.0:4443:443", ] , 
        state           : "started" ,
    }
  - {
        enabled         : true ,
        name            : "apache2" ,
        image           : "lrgc01/apache2-stretch_slim" ,
        pull            : true ,
        networks        : [ { name : "bridge" } ] ,
        volumes         : [ "apache2cfg:/etc/apache2", "apache2html:/var/www/html", "apache2logs:/var/log/apache2", ] ,
        volumes_from    : [ "uwsgi" ] ,
        published_ports : [ "0.0.0.0:8880:80", "0.0.0.0:4433:443", ] , 
        state           : "started" ,
        env             : { APACHE2_MOD_LIST : "proxy proxy_uwsgi" , } ,
    }


#
#--- End of Docker role block
